name: integration-test
on:
  pull_request:
    branches:
      - dev
      - master

env:
  TEST_WALLET_START_TIMEOUT: '180000' # 3 minutes

jobs:
  itest:
    runs-on: ubuntu-20.04
    timeout-minutes: 40

    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
        # https://github.com/actions/checkout/releases/tag/v3.5.0
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3

      - name: Use Node.js ${{ matrix.node-version }}
        # https://github.com/actions/setup-node/releases/tag/v3.6.0
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run the tests
        run: npm run test_integration

      - name: Upload debug transaction logs
        if: always()
        # https://github.com/actions/upload-artifact/releases/tag/v3.1.2
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: test-transacion-logs
          path: tmp
      - name: Upload coverage
        # https://github.com/codecov/codecov-action/releases/tag/v3.1.1
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70
        if: ${{ matrix.node-version }} == 14.x
        with:
          verbose: true
      - name: Collect docker logs on failure
        if: failure()
        # https://github.com/jwalton/gh-docker-logs/releases/tag/v2.2.1
        uses: jwalton/gh-docker-logs@59c9656cd3cb7542525f3dce7ae2f44c0ff85d66
        with:
          dest: './docker-logs'
      - name: Tar logs
        if: failure()
        run: tar cvzf ./docker-logs.tgz ./docker-logs
      - name: Upload logs to GitHub
        if: failure()
        # https://github.com/actions/upload-artifact/releases/tag/v3.1.2
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: logs.tgz
          path: ./docker-logs.tgz
